{"version":3,"sources":["Filter.js","Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","props","style","marginBottom","className","onClick","e","toggle","filterCount","Modal","display","show","stopPropagation","elements","map","element","index","type","label","value","placeholder","onChange","handler","defaultValue","options","item","name","i","checked","reset","initialElements","App","useState","showModal","toggleModal","setFilterCount","cloneDeep","setElements","event","nestedIndex","console","log","preset","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2058dae.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst Filter = props => {\n  return (\n    <div>\n      <div style={{marginBottom: '100px'}}>Click on the button below to start applying filters</div>\n      <button className=\"filter-button\" onClick={e => props.toggle(true)}>\n        {props.filterCount === 0 ? \"Filters\" : `Filters (${props.filterCount})`}\n      </button>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport \"./App.css\";\n\nconst Modal = props => {\n  function createElements() {\n    return props.elements.map((element, index) => {\n      switch (element.type) {\n        case \"input\":\n          return (\n            <div key={index} className=\"element-item\">\n              <div className=\"item\">\n                <label>{element.label}</label>\n              </div>\n              <div>\n                <input\n                  type=\"text\"\n                  value={element.value}\n                  placeholder={element.placeholder ? element.placeholder : \"\"}\n                  onChange={e => props.handler(e, index)}\n                />\n              </div>\n            </div>\n          );\n        case \"textArea\":\n          return (\n            <div key={index} className=\"element-item\">\n              <div className=\"item\">\n                <label>{element.label}</label>\n              </div>\n              <div>\n                <textarea\n                  onChange={e => props.handler(e, index)}\n                  value={element.value}\n                  placeholder={element.placeholder ? element.placeholder : \"\"}\n                ></textarea>\n              </div>\n            </div>\n          );\n        case \"select\":\n          return (\n            <div key={index} className=\"group-elements\">\n              <div className=\"item\">\n                <label>{element.label}</label>\n              </div>\n              <div>\n                <select\n                  onChange={e => props.handler(e, index)}\n                  defaultValue={element.value}\n                >\n                  {element.options.map(item => {\n                    return <option>{item}</option>;\n                  })}\n                </select>\n              </div>\n            </div>\n          );\n        case \"checkboxGroup\":\n          return (\n            <div key={index} className=\"group-elements\">\n              <div className=\"item\">{element.name}</div>\n              <div>\n                {element.elements.map((item, i) => {\n                  return (\n                    <div key={i} className=\"element-item\">\n                      <input\n                        type=\"checkbox\"\n                        onClick={e => props.handler(e, index, i)}\n                        value={item.value}\n                        checked={item.checked}\n                      />{\" \"}\n                      <label>{item.name}</label>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          );\n        case \"radioGroup\":\n          return (\n            <div key={index} className=\"group-elements\" onClick={e => props.handler(e, index)}>\n              <div className=\"item\">{element.name}</div>\n              <div>\n              {element.elements.map(item => {\n                return (\n                  <div className=\"element-item\">\n                    <input\n                      type=\"radio\"\n                      value={item.value}\n                      name={element.name}\n                      checked={element.value === item.value}\n                    />\n                    <label>{item.name}</label>\n                  </div>\n                );\n              })}\n              </div>\n            </div>\n          );\n      }\n    });\n  }\n\n  return (\n    <div\n      className=\"modal-container\"\n      onClick={e => props.toggle(false)}\n      style={{ display: props.show === false ? \"none\" : \"flex\" }}\n    >\n      <div onClick={e => e.stopPropagation()} className=\"modal-content\">\n        <div className=\"modal-body\">{createElements()}</div>\n        <div className=\"footer\">\n          <button className=\"buttons\" onClick={e => props.toggle(false)}>\n            Apply Filters\n          </button>\n          <button className=\"buttons\" onClick={() => props.reset()}>\n            Clear All\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Filter from \"./Filter\";\nimport Modal from \"./Modal\";\nimport cloneDeep from \"lodash.clonedeep\";\nconst initialElements = [\n  {\n    type: \"input\",\n    placeholder: \"enter your name\",\n    value: \"\",\n    label: \"name\"\n  },\n  {\n    type: \"textArea\",\n    placeholder: \"add description\",\n    label: \"about you\",\n    value: \"\"\n  },\n  {\n    type: \"checkboxGroup\",\n    name: 'select',\n    elements: [\n      { name: \"first\", value: \"first\", checked: false },\n      { name: \"second\", value: \"second\", checked: false }\n    ]\n  },\n  {\n    type: \"radioGroup\",\n    name: \"gender\",\n    value: \"\",\n    elements: [\n      { name: \"first\", value: \"first\" },\n      { name: \"second\", value: \"second\" }\n    ]\n  },\n  {\n    type: \"select\",\n    options: [\"INDIA\", \"USA\", \"UAE\", \"UK\"],\n    label: \"country\",\n    value: \"\"\n  }\n];\n\nfunction App() {\n  const [showModal, toggleModal] = useState(false);\n  const [filterCount, setFilterCount] = useState(0);\n  const [elements, setElements] = useState(() => cloneDeep(initialElements));\n\n  function resetElements() {\n    setElements(cloneDeep(initialElements));\n    setFilterCount(0);\n  }\n\n  function handler(event, index, nestedIndex) {\n    console.log(\"intial data\", initialElements);\n    const preset = cloneDeep(elements);\n    // to update the filter count only once for each element selescted\n    if (preset[index].value === \"\") setFilterCount(filterCount + 1);\n    if (event.target.type === \"checkbox\") {\n      // checkbox group doesnt have value on element we handle count here ..\n      if (preset[index].elements[nestedIndex].checked) {\n        setFilterCount(filterCount === 0 ? 0 : filterCount - 1);\n      } else {\n        setFilterCount(filterCount + 1);\n      }\n      preset[index].elements[nestedIndex].checked = !preset[index].elements[\n        nestedIndex\n      ].checked;\n    } else {\n      preset[index].value = event.target.value;\n    }\n    setElements(preset);\n    // console.log(\"elenemt clicked\", event.target.tnameype, \"index\", index);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Filter toggle={toggleModal} filterCount={filterCount} />\n        <Modal\n          handler={handler}\n          reset={resetElements}\n          elements={elements}\n          toggle={toggleModal}\n          show={showModal}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}